/*
 *
 *      Copyright (c) 2019-2026, wlidcat All rights reserved.
 *
 *  Do not alter or remove copyright notices or this file header
 *
 *  This code is free software; you can redistribute it and/or modify it
 *
 *  Author: wlidcat (bishengqin@gmail.com)
 *
 */
package ${package}.${moduleName}.controller;

import com.baomidou.mybatisplus.core.toolkit.Wrappers;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.wildcatcloud.wildcat.common.core.util.Result;
import com.wildcatcloud.wildcat.common.log.annotation.SysLog;
import ${package}.${moduleName}.entity.${className};
import ${package}.${moduleName}.service.${className}Service;
import lombok.AllArgsConstructor;
import org.springframework.web.bind.annotation.*;


/**
 * ${comments}
 *
 * @author ${author}
 * @date ${datetime}
 */
@RestController
@AllArgsConstructor
@RequestMapping("/${pathName}")
public class ${className}Controller {

  private final  ${className}Service ${classname}Service;

  /**
   * 分页查询
   * @param page 分页对象
   * @param ${classname} ${comments}
   * @return
   */
  @GetMapping("/page")
  public Result get${className}Page(Page page, ${className} ${classname}) {
    return  new Result<>(${classname}Service.page(page,Wrappers.query(${classname})));
  }


  /**
   * 通过id查询${comments}
   * @param ${pk.lowerAttrName} id
   * @return R
   */
  @GetMapping("/{${pk.lowerAttrName}}")
  public Result getById(@PathVariable("${pk.lowerAttrName}") ${pk.attrType} ${pk.lowerAttrName}){
    return new Result<>(${classname}Service.getById(${pk.lowerAttrName}));
  }

  /**
   * 新增${comments}
   * @param ${classname} ${comments}
   * @return Result
   */
  @SysLog("新增${comments}")
  @PostMapping
  public Result save(@RequestBody ${className} ${classname}){
    return new Result<>(${classname}Service.save(${classname}));
  }

  /**
   * 修改${comments}
   * @param ${classname} ${comments}
   * @return Result
   */
  @SysLog("修改${comments}")
  @PutMapping
  public Result updateById(@RequestBody ${className} ${classname}){
    return new Result<>(${classname}Service.updateById(${classname}));
  }

  /**
   * 通过id删除${comments}
   * @param ${pk.lowerAttrName} id
   * @return Result
   */
  @SysLog("删除${comments}")
  @DeleteMapping("/{${pk.lowerAttrName}}")
  public Result removeById(@PathVariable ${pk.attrType} ${pk.lowerAttrName}){
    return new Result<>(${classname}Service.removeById(${pk.lowerAttrName}));
  }

}
